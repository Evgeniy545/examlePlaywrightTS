.defauls-rules: &default-rules
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "web" 
  tags:
    - tpsg-multistage
.defaults-environment: &defaults-environment
  name: $CI_COMMIT_REF_NAME.playwright.tpsg.etpgpb.ru
  url: https://$CI_COMMIT_REF_NAME.playwright.tpsg.etpgpb.ru

stages:
  - start
  - linter
  - tests
  - deploy
  - clean
  - build

start_pipeline:
  <<: *default-rules
  stage: start
  when: manual
  script:
    - docker login -u $DOCKER_REGISTRY_LOGIN -p $DOCKER_REGISTRY_PASS $DOCKER_REGISTRY
    - exit 0

eslint:
  <<: *default-rules
  stage: linter
  needs: [start_pipeline]
  script:
    - docker-compose --project-name ${CI_COMMIT_REF_NAME} run playwright  npx eslint ${TEST_PATH} -c ./config/.eslintrc.json

playwright_test:
  <<: *default-rules
  stage: tests
  allow_failure: true
  needs: [eslint]
  script:
    - docker-compose --project-name ${CI_COMMIT_REF_NAME} run playwright npx playwright test ${TEST_PATH} --workers ${WORKERS} --config=./config/playwright.config.ts

deploy:
  <<: *default-rules
  environment:
    auto_stop_in: 1 day
    <<: *defaults-environment
    on_stop: clean_env
  stage: deploy
  needs: [playwright_test]
  script:
    - docker-compose --project-name ${CI_COMMIT_REF_NAME} -f docker-compose.yml up -d --force-recreate

clean_env:
  <<: *default-rules
  environment:
    <<: *defaults-environment
    action: stop
  stage: clean
  allow_failure: true
  script:
    - docker-compose --project-name ${CI_COMMIT_REF_NAME} -f docker-compose.yml down -v
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual

build_image:
  <<: *default-rules
  stage: build
  when: manual
  script:
    - docker build -t $PLAYWRIGHT_IMAGE_NAME .
    - docker login -u $DOCKER_REGISTRY_LOGIN -p $DOCKER_REGISTRY_PASS $DOCKER_REGISTRY
    - docker push $PLAYWRIGHT_IMAGE_NAME
